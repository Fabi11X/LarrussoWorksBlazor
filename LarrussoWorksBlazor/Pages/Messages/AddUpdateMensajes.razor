@page "/mensajes/add"
@page "/mensajes/update/{id:int}"

@using LarrussoWorksBlazor.Data.Models
@using LarrussoWorksBlazor.Data
@inject HttpClient http
@using System.Net.Http
@using System.Net.Http.Json
@inject NavigationManager NavigationManager


<div class="container">
    <div class="text-center">
        <h1>@(estaActualizado ? $"Editar Mensaje [Id: {mensajes.IdMensaje}]" : "Agregar Mensaje")</h1>
    </div>

    <EditForm Model="@mensajes">
        <form class="container-border" @onsubmit="Guardar">
            <div class="mb-2">
                <label class="col-form-label" for="idusuario">Usuario</label>
                <input required class="form-control" @bind-value="@mensajes.IdUsuario" id="idusuario" />
            </div>

            <div class="mb-2">
                <label class="col-form-label" for="idempleo">Empleo</label>
                <input required class="form-control" @bind-value="@mensajes.IdEmpleo" id="idempleo" />
            </div>

            <div class="mb-2">
                <label class="col-form-label" for="buzonmensaje">Mensaje</label>
                <input required class="form-control" @bind-value="@mensajes.BuzonMensaje" id="buzonmensaje" />
            </div>

            <div class="text-center">
                <button type="submit" class="btn btn-primary">Guardar</button>
                <a class="btn btn-danger" href="/Mensajes">Cancelar</a>
            </div>

        </form>
    </EditForm>

</div>


@code{ [Parameter]

    public int id { get; set; }

    public bool estaActualizado { get; set; } = false;

    bool cargando = true;

    Mensaje mensajes = new Mensaje();

    protected override async Task OnInitializedAsync()
    {
        estaActualizado = id != 0;
        if (estaActualizado)
        {
            var response = await http.GetFromJsonAsync<Mensaje>($"api/Mensaje/{id}");
            if (response != null)
            {
                mensajes = response;
            }
        }
        cargando = false;
    }

    protected async Task Guardar()
    {
        HttpResponseMessage response;
        if (estaActualizado)
        {
            response = await http.PutAsJsonAsync<Mensaje>($"api/Mensaje/ActualizarMensajes/{id}", mensajes!);
        }
        else
        {
            response = await http.PostAsJsonAsync<Mensaje>($"/api/Mensaje/CrearMensajes", mensajes!);
        }
        Mensaje guardado = response.Content.ReadFromJsonAsync<Mensaje>().Result;
        NavigationManager.NavigateTo("/mensajes");
    } 
    
}